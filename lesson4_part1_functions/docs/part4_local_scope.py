"""
Области видимости переменных: ЛОКАЛЬНЫЕ ПЕРЕМЕННЫЕ (globals)
"""

GLOBAL_VAR = "GLOBAL_VAR"
var = 100  # var - это Глобальная переменная, записаная маленькой буквой. Так лучше не делать!


def func1(local_var):
    print(local_var)  # для func1 переменная local_var - это ее Локальная переменная


func1("FOO")


def func2(local_var):
    print(local_var)  # для func2 переменная local_var - это ее Локальная local_var, а не та, что в func1!


func2("BAR")


def func3():
    print(local_var)  # для func3 переменной с именем local_var не существует! Если вызвать func3, то будет ошибка


def func4(var):
    print(var)  # для func4 переменной с именем var - это ее Локальная var, а не Глобальная var!
    # P.S: лучше вообще не делать так, чтобы имена Глобальных и Локальных переменных совпадали


func4(200)


def func5():
    print(var)  # для func4 переменной с именем var - это Глобальная var!
    # так как Локальной переменной var для func5 не определено.


func5()


def func6(arg):
    print(arg)
    value = "TEST"
    print(value)
    # для func6 локальными переменными будут:
    # - ее аргумент arg
    # - переменная value, которая была создана внутри функции

"""
Локальные переменные хранятся в соответствующем дикте, его можно получить, вызвав функцию locals()
"""

"""1. Если вызвать locals() на уровне Модуля - то мы получим ТО ЖЕ, что и при вызове globals()"""
print(locals())
print(globals())
assert locals() == globals()
# Так происходит потому, что для Модуля Глобальные переменные одновременно являются Локальными!

"""2. Если вызвать locals() на уровне функции - то мы получим только ее локальные переменные"""


def func(a, b, c):
    print(locals())
    d = "D"  # создавая новую переменную внутри функции, мы "расширяем" дикт Локальных переменных
    print(locals())


func("A", "B", "C")


"""
ЗАКРЕПЛЯЕМ:

- ГЛОБАЛЬНЫЕ переменные имеют область видимости, которая распространяется на ВЕСЬ код внутри модуля: 
  функции внутри модуля, классы внутри модуля (и их методы) и любой другой код, 
  написанный на уровне модуля будет "видеть" Глобальным переменные (то есть, иметь к ним доступ)
  
- ЛОКАЛЬНЫЕ переменные имеют область видимости, которая распространяется только на ту часть кода, 
  внутри которой они объявлены:
  - для Функций - Локальными переменными будут ее аргументы и переменные, которые были созданы внутри функции
  - для Модуля - Локальными переменными будут Глобальные переменные
"""



